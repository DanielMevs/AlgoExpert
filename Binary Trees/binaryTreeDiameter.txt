# -*- coding: utf-8 -*-
"""
Created on Sat May 29 17:30 2021

@author: daniel
"""

Binary Tree Diameter
---------------------
-Write a function that takes in a Binary Tree and returns its diameter.
-The diameter of a binary tree is defined as the length of its longest path, even 
if that path doesn't pass through the root of the tree.

-A path is a collection of connected nodes in a tree, where no node is connected
to more than two other nodes. 
-The length of a path is the number of edges between the path's first node and its 
last node.

Each Binary Tree node has an integer value, a left child node, and a right child noe.
Children nodes can either be BinaryTree nodes themselves or None/null

See binaryTreeDiameter.jpg

-We're looking for the longest path.
-We're going to be using a depth-first traveral or a variation of that
-We're going to have a recursive function taking in nodes as roots and we're going to
look at every subtree in the binary tree.
-For every sub-tree where each node functions as the root of the subtree.
-We're going to return 2 values: 1) diamter 2) height

-We visit every node once so time is O(N)
-Recursion implies we're adding frames on the call stack => O(N) space.
